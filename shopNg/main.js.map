{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-product/add-product.component.html","webpack:///./src/app/add-product/add-product.component.ts","webpack:///./src/app/add-transaction/add-transaction.component.html","webpack:///./src/app/add-transaction/add-transaction.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/find-product/find-product.component.html","webpack:///./src/app/find-product/find-product.component.ts","webpack:///./src/app/find-transaction/find-transaction.component.html","webpack:///./src/app/find-transaction/find-transaction.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/lq-product.service.ts","webpack:///./src/app/lqproduct/lqproduct.component.html","webpack:///./src/app/lqproduct/lqproduct.component.ts","webpack:///./src/app/product.service.ts","webpack:///./src/app/product.ts","webpack:///./src/app/product/product.component.html","webpack:///./src/app/product/product.component.ts","webpack:///./src/app/show-product/show-product.component.html","webpack:///./src/app/show-product/show-product.component.ts","webpack:///./src/app/show-transaction/show-transaction.component.html","webpack:///./src/app/show-transaction/show-transaction.component.ts","webpack:///./src/app/transaction.service.ts","webpack:///./src/app/transaction.ts","webpack:///./src/app/transaction/transaction.component.html","webpack:///./src/app/transaction/transaction.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","\n<form #MyForm=\"ngForm\"> \n        <div class=\"row\" *ngIf=\"names\" dir=\"auto\">\n            <div class=\"col\">\n                <div class=\"p container\">\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                            <div class=\"panel panel-default\">\n                                <div class=\"panel-body\">\n                                    <div *ngIf=\"names\" class=\"table-responsive\">\n                                        <table class=\"table table-condensed\" >\n                                            <thead>\n                                                <tr>\n                                                    <td><strong i18n>Item</strong></td>\n                                                    <td class=\"text-center\"><strong i18n>Quantity</strong></td>\n                                                    <td class=\"text-center\"><strong i18n>Price</strong></td>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <!-- foreach ($order->lineItems as $line) or some such thing here -->\n                                                <tr *ngFor=\"let name of names\">\n                                                    <td>{{product[name].name}}</td>\n                                                    <td class=\"text-center\">{{product[name].quantity}}</td>\n                                                    <td class=\"text-center\">{{product[name].price}}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\" row\" >\n                    <div class=\"p form-inline\" *ngFor=\"let name of names\" [hidden]=\"hidden[name]\" >\n                        <div class=\"col\" >\n                            <label for=\"product\" i18n>product:</label>\n                            <input class=\"form-control\" type=\"text\" id=\"product\" name=\"product\" [(ngModel)] = \"product[name].name\" i18n-placeholder placeholder=\"enter name\"  required>    \n                            </div>\n                            <div class=\"col\" >\n                                    <label for=\"quantity\" i18n>quantity:</label>\n                                    <input class=\"form-control\" type=\"number\" id=\"quantity\" name=\"quantity\" [(ngModel)] = \"product[name].quantity\" i18n-placeholder placeholder=\"enter quantity\" required>\n                            </div>\n                            <div class=\"col\" >\n                                <label for=\"quantity\" i18n>price:</label>\n                                <input class=\"form-control\" type=\"number\" id=\"price\" name=\"price\" [(ngModel)] = \"product[name].price\" i18n-placeholder placeholder=\"enter price\" required>\n                            </div>\n                        </div>\n                </div>\n            </div>\n        </div>\n    </form>\n    \n    <div class=\" row\" >\n        <div class=\"col\">\n                <button class=\"btn-info btn btn-block\" (click)=\"showName()\" i18n>add</button>\n        </div>\n        <div class=\"col\">\n                <button class=\"btn btn-block\" (click)=\"deleteName()\" i18n>delete</button>\n        </div>\n    </div>\n    \n    <div class=\"list-group-item row\">\n            <button class=\"btn-success btn btn-block\" (click)=\"onSubmit()\" [disabled]=\"!(names.length>0 && !MyForm.invalid)\" i18n>Submit</button>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { Product } from '../product';\n\nimport { ProductService} from '../product.service'\nimport {  Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.css']\n})\nexport class AddProductComponent implements OnInit {\n\n  product:Product[]=[]\n  names:number[]=[]\n\n  hidden:boolean[]=[]\n\n  constructor(private productService: ProductService, private router: Router) { }\n\n  onSubmit(){\n    this.productService.addProduct(this.product).subscribe()\n    this.productService.throwProduct(this.product)\n\n    this.router.navigate([`product/1`])\n  }\n\n\n  i:number=0;\n\n  showName(){\n    if((this.names.indexOf(this.i)>-1)){\n      this.i = this.i +1;\n      console.log(true)\n    }\n\n    let product = new Product();\n\n    product.quantity=null\n    product.s_price=null\n    \n\n    this.product[this.i]=product\n    this.hidden.push(false) \n\n    this.names.push(this.i)\n\n    if(this.i>0){\n      this.hidden[this.i-1] = true;  \n    }  \n\n\n    this.i = this.i+1\n\n  }\n\n  deleteName(){\n\n    if(!(this.names.indexOf(this.i)>-1)){\n      this.i = this.i -1;\n      console.log(true)\n    }\n    this.product.pop()\n\n    this.hidden.pop(); \n    this.hidden[this.i-1] = false;\n\n    this.names.pop();\n\n    this.i = this.i-1                                                                                                                                                                                                                                                                                                                                                                                                                                     \n\n    //i can't be negative\n    if(this.i<0) this.i=0;\n  }\n\n\n  ngOnInit() {\n  }\n\n}\n","\n<form #MyForm=\"ngForm\"> \n    <div class=\"row\" *ngIf=\"names\" dir=\"auto\">\n        <div class=\"col\">\n            <div class=\"list-group-item \" >\n                <label for=\"clientPhone\" i18n>Client Phone:</label>\n                <input class=\"form-control\" type=\"text\" name=\"clientPhone\" id=\"clientPhone\" [(ngModel)] = \"transaction.clientPhone\" i18n-placeholder placeholder=\"enter phone number\" #clientPhone=\"ngModel\" required pattern=\"[2-4]{1}[0-9]{7}\">\n            </div>\n            <div class=\"p container\">\n                <div class=\"row\">\n                    <div class=\"col-md-12\">\n                        <div class=\"panel panel-default\">\n                            <div class=\"panel-body\">\n                                <div *ngIf=\"names\" class=\"table-responsive\">\n                                    <table class=\"table table-condensed\" >\n                                        <thead>\n                                            <tr>\n                                                <td><strong i18n>Item</strong></td>\n                                                <td class=\"text-center\"><strong i18n>Quantity</strong></td>\n                                                <td class=\"text-center\"><strong i18n>Price</strong></td>\n                                                <td class=\"text-right\"><strong i18n>Totals</strong></td>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <!-- foreach ($order->lineItems as $line) or some such thing here -->\n                                            <tr *ngFor=\"let name of names\">\n                                                <td>{{transaction.product[name].name}}</td>\n                                                <td class=\"text-center\">{{transaction.product[name].quantity}}</td>\n                                                <td class=\"text-center\">{{transaction.product[name].s_price | number}}</td>\n                                                <td class=\"text-right\">{{transaction.product[name].total() | number}}</td>\n                                            </tr>\n                                            <tr>\n                                                <td class=\"thick-line\"></td>\n                                                <td class=\"thick-line\"></td>\n                                                <td class=\"thick-line text-center\"><strong i18n>Total</strong></td>\n                                                <td class=\"thick-line text-right\">{{transaction.totals() | number}}</td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\" row\" >\n                <div class=\"p form-inline\" *ngFor=\"let name of names\" [hidden]=\"hidden[name]\" >\n                    <div class=\"col\" >\n                        <label for=\"product\" i18n>product:</label>\n                        <input class=\"form-control\" type=\"text\" id=\"product\" name=\"product\" [(ngModel)] = \"transaction.product[name].name\" i18n-placeholder placeholder=\"enter name\"  required>    \n                        </div>\n                        <div class=\"col\" >\n                                <label for=\"quantity\" i18n>quantity:</label>\n                                <input class=\"form-control\" type=\"number\" id=\"quantity\" name=\"quantity\" [(ngModel)] = \"transaction.product[name].quantity\" i18n-placeholder placeholder=\"enter quantity\" required>\n                        </div>\n                        <div class=\"col\" >\n                            <label for=\"quantity\" i18n>price:</label>\n                            <input class=\"form-control\" type=\"number\" id=\"price\" name=\"price\" [(ngModel)] = \"transaction.product[name].s_price\" i18n-placeholder placeholder=\"enter price\" required>\n                        </div>\n                    </div>\n            </div>\n        </div>\n    </div>\n</form>\n\n<div class=\" row\" >\n    <div class=\"col\">\n            <button class=\"btn-info btn btn-block\" (click)=\"showName()\" i18n>add</button>\n    </div>\n    <div class=\"col\">\n            <button class=\"btn btn-block\" (click)=\"deleteName()\" i18n>delete</button>\n    </div>\n</div>\n\n<div class=\"list-group-item row\">\n        <button class=\"btn-success btn btn-block\" (click)=\"onSubmit()\" [disabled]=\"!(names.length>0 && !MyForm.invalid)\" i18n>Submit</button>\n</div>","import { Component, OnInit, Renderer2, OnChanges, SimpleChanges } from '@angular/core';\nimport { Transaction } from '../transaction'\n\nimport { TransactionService } from '../transaction.service';\nimport { Product } from '../product';\n\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-add-transaction',\n  templateUrl: './add-transaction.component.html',\n  styleUrls: ['./add-transaction.component.css']\n})\n\nexport class AddTransactionComponent implements OnInit, OnChanges {\n\n  transaction: Transaction = new Transaction();\n\n  names:number[]=[]\n  hidden:boolean[]=[]\n  \n  total:number;\n\n\n  clientPhone\n\n  transactionR\n\n  constructor(private transactionService: TransactionService, private router: Router) { }\n\n  onSubmit(){\n    var sum=0;\n    for(let i=0;i<this.transaction.product.length;i++){\n      this.transaction.product[i].totals = this.transaction.product[i].total()\n      sum = sum + this.transaction.product[i].totals\n    }\n    this.transaction.total = sum\n\n    this.transactionService.addTransaction(this.transaction).subscribe((transaction) => {\n\n      this.transactionService.throwTransaction(transaction)\n      \n      this.router.navigate([`transaction/show`])\n    })\n      \n  }\n\n\n  i:number=0;\n\n  showName(){\n    if((this.names.indexOf(this.i)>-1)){\n      this.i = this.i +1;\n      console.log(true)\n    }\n\n    let product = new Product();\n\n    product.quantity=null\n    product.s_price=null\n    \n\n    this.transaction.product[this.i]=product\n    this.hidden.push(false) \n\n    this.names.push(this.i)\n\n    if(this.i>0){\n      this.hidden[this.i-1] = true;  \n    }  \n\n\n    this.i = this.i+1\n\n  }\n\n  deleteName(){\n\n    if(!(this.names.indexOf(this.i)>-1)){\n      this.i = this.i -1;\n      console.log(true)\n    }\n    this.transaction.product.pop()\n\n    this.hidden.pop(); \n    this.hidden[this.i-1] = false;\n\n    this.names.pop();\n\n    this.i = this.i-1                                                                                                                                                                                                                                                                                                                                                                                                                                     \n\n    //i can't be negative\n    if(this.i<0) this.i=0;\n  }\n\n  ngOnChanges(changes: SimpleChanges){\n    \n  }\n\n  ngOnInit() {\n\n    this.transaction.clientPhone=\"\"\n    this.transaction.product=[]\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { FindTransactionComponent } from './find-transaction/find-transaction.component';\nimport { ShowTransactionComponent } from './show-transaction/show-transaction.component';\n\nimport { AddTransactionComponent } from './add-transaction/add-transaction.component';\nimport { TransactionComponent } from './transaction/transaction.component'\n\nimport { HomeComponent } from './home/home.component'\nimport { FindProductComponent } from './find-product/find-product.component'\n\nimport { AddProductComponent } from './add-product/add-product.component'\nimport { ShowProductComponent } from './show-product/show-product.component'\n\nimport { ProductComponent } from './product/product.component';\nimport { LQProductComponent } from './lqproduct/lqproduct.component'\n\n\nconst routes: Routes = [\n{path: 'find/transaction', component: FindTransactionComponent},\n{path: 'add/transaction', component: AddTransactionComponent},\n\n{path: 'find/product', component: FindProductComponent},\n{path: 'add/product', component: AddProductComponent},\n\n{path: 'transaction/show', component: ShowTransactionComponent},\n{path: 'transaction', component: TransactionComponent},\n\n{path: '', component: HomeComponent},\n{path: 'product/:name', component: ShowProductComponent},\n\n{path: 'product', component: ProductComponent},\n{path: 'lqproduct', component: LQProductComponent},\n\n\n];\n\n@NgModule({\n  exports: [\n    RouterModule\n  ],\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n})\nexport class AppRoutingModule { }\n","\n<ul class=\"list-group\">\n    <li class=\"list-group-item\" ><a class=\"btn btn-default btn-block btn-info\" routerLink=\"/\" i18n>Home</a></li>\n</ul>\n\n<router-outlet></router-outlet>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'shopNg';\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { TransactionComponent } from './transaction/transaction.component';\nimport { LQProductComponent } from './lqproduct/lqproduct.component';\n\nimport { ShowTransactionComponent } from './show-transaction/show-transaction.component';\nimport { FindTransactionComponent } from './find-transaction/find-transaction.component';\n\nimport { AppRoutingModule } from './/app-routing.module';\nimport {FormsModule} from '@angular/forms';\n\nimport { AddTransactionComponent } from './add-transaction/add-transaction.component';\nimport { HomeComponent } from './home/home.component';\n\nimport { ProductComponent } from './product/product.component';\nimport { FindProductComponent } from './find-product/find-product.component';\n\nimport { AddProductComponent } from './add-product/add-product.component';\nimport { ShowProductComponent } from './show-product/show-product.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TransactionComponent,\n\n    LQProductComponent,\n    ShowTransactionComponent,\n\n    FindTransactionComponent,\n    AddTransactionComponent,\n\n    HomeComponent,\n\n    ProductComponent,\n    FindProductComponent,\n    AddProductComponent,\n    \n    ShowProductComponent,\n    \n  ],\n  exports:[\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"container row\" dir=\"auto\">\n    <label for=\"bid\" i18n>Product Name</label>\n    <input type=\"text\" [(ngModel)] = \"name\" id=\"bid\">\n    <button (click)=\"onSubmit()\" i18n>submit</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-find-product',\n  templateUrl: './find-product.component.html',\n  styleUrls: ['./find-product.component.css']\n})\nexport class FindProductComponent implements OnInit {\n\n  name = \"\"\n\n  constructor(private router: Router) { }\n\n  onSubmit(){\n\n    this.router.navigateByUrl('product/'+this.name)\n\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"row container\" dir=\"rtl\">\n    <label for=\"bid\" i18n>Transactin Number</label>\n    <input type=\"text\" [(ngModel)] = \"id\" id=\"bid\" >\n    <button (click)=\"onSubmit()\" i18n>Submit</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {Router } from '@angular/router'\n\n@Component({\n  selector: 'app-find-transaction',\n  templateUrl: './find-transaction.component.html',\n  styleUrls: ['./find-transaction.component.css']\n})\nexport class FindTransactionComponent implements OnInit {\n\n  id\n\n  constructor(private router: Router) { }\n\n  onSubmit(){\n\n    this.router.navigateByUrl('transaction/'+this.id)\n\n  }\n\n\n  ngOnInit() {\n  }\n\n}","<div class=\"col\" dir=\"auto\">\n  <div class=\"container\">\n    <ul class=\"list-group\" >\n      <li class=\"list-group-item\" ><a class=\"btn btn-default btn-block btn-info\" routerLink=\"/transaction\" i18n>Transaction</a></li>\n      <li class=\"list-group-item\" ><a class=\"btn btn-default btn-block btn-info\" routerLink=\"/product\" i18n>Product</a></li>\n      <li  class=\"list-group-item\" ><a class=\"btn btn-default btn-block btn-info\" routerLink=\"/lqproduct\" i18n>Low Quantity Products</a></li>\n    </ul>\n  </div>\n</div>\n\n<router-outlet dir=\"auto\"></router-outlet>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { HttpClient } from '@angular/common/http';\nimport { LqProduct } from './lqProduct'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LqProductService {\n\n  constructor(private http: HttpClient) { }\n\n  getLqProducts(): Observable<LqProduct[]>{\n    return this.http.get<LqProduct[]>(this.url)\n  }\n\n  getLqProduct(_id: string): Observable<LqProduct>{\n    return this.http.get<LqProduct>(this.url+\"/\"+_id)\n  }\n\n  deleteLqProduct(_id: string): Observable<LqProduct>{\n    return this.http.delete<LqProduct>(this.url+\"/\"+_id)\n  }\n\n  addLqProduct(lqProduct: LqProduct): Observable<LqProduct>{\n    return this.http.post<LqProduct>(this.url, lqProduct)\n  }\n\n  putLqProduct(_id:string, lqProduct: LqProduct): Observable<LqProduct>{\n    return this.http.put<LqProduct>(this.url+\"/\"+_id, lqProduct)\n  }\n\n\n  url = \"http://localhost:3000/api/lq_products/\";\n}\n","\n<div dir=\"auto\" class=\"row\" *ngIf=\"lqProducts\">\n\n  <div class=\"container\">\n    <div class=\"col\">\n        <table class=\"table table-striped\">\n            <thead>\n              <tr>\n                <th i18n>Product</th>\n                <th i18n>Qty</th>        \n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let product of lqProducts\">\n                  <td>{{product.name}}</td>\n                  <td>{{product.quantity}} </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n    </div>\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { LqProductService } from '../lq-product.service'\n\n\n@Component({\n  selector: 'app-lqproduct',\n  templateUrl: './lqproduct.component.html',\n  styleUrls: ['./lqproduct.component.css']\n})\nexport class LQProductComponent implements OnInit {\n\n  lqProducts\n\n  constructor(private lqProductService: LqProductService) { }\n  \n  getProducts(): void{\n    this.lqProductService.getLqProducts().subscribe(lqProducts => this.lqProducts = lqProducts)\n  }\n\n  ngOnInit() {\n    this.getProducts()\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs'\nimport {Product } from './product'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor(private http: HttpClient) { }\n\n  getProducts(): Observable<Product[]>{\n    return this.http.get<Product[]>(this.url)\n  }\n\n  getProduct(_id: string): Observable<Product>{\n    return this.http.get<Product>(this.url+_id)\n  }\n\n  deleteProduct(_id: string): Observable<Product>{\n    console.log(\"Delete\")\n    return this.http.delete<Product>(this.url+_id)\n  }\n\n  addProduct(product: Product[]): Observable<Product[]>{\n    return this.http.post<Product[]>(this.url, product)\n  }\n\n  putProduct(_id:string, product: Product): Observable<Product>{\n    return this.http.put<Product>(this.url+_id, product)\n  }\n\nOProduct:Observable<Product[]>\n\n  throwProduct(product:Product[]): void{\n    this.OProduct = Observable.create((observer)=>{\n      observer.next(product)\n      observer.complete()\n    })\n  }\n\n  catchProduct(): Observable<Product[]>{\n    return this.OProduct;\n  }\n\n  url = \"http://localhost:3000/api/products/\";\n\n}\n","export class Product {\n    _id?:string\n    name: string\n    quantity: number\n    price?:number\n    s_price?:number\n    totals?:number\n\n    total() {\n        return this.quantity * this.s_price;\n    }\n\n}","\n  <div dir=\"auto\" class=\"row\">\n      <div class=\"col-6\">\n          <a class=\"btn btn-default btn-block btn-primary\" routerLink=\"/find/product\" i18n>Find</a>\n          </div>\n          <div class=\"col-6\" >\n          <a class=\"btn btn-default btn-block btn-primary\" routerLink=\"/add/product\" i18n>Add</a>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"row\" *ngIf=\"product\" dir=\"auto\">\n\n    <div class=\"container\">\n      <div class=\"col\">\n          <table class=\"table\">\n              <thead class=\"thead-light\">\n                <tr>\n                  <th i18n>Product</th>\n                  <th i18n>Qty</th>        \n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                    <td>{{product.name}}</td>\n                    <td>{{product.quantity}} </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n      </div>\n\n</div>\n<div class=\"p container\" dir=\"auto\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"panel panel-default\">\n                <div class=\"panel-body\">\n                    <div *ngIf=\"aProduct\" class=\"table-responsive\">\n                        <table class=\"table table-condensed\" >\n                            <thead>\n                                <tr>\n                                    <td><strong i18n>Item</strong></td>\n                                    <td class=\"text-center\"><strong i18n>Quantity</strong></td>\n                                    <td class=\"text-center\"><strong i18n>Price</strong></td>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <!-- foreach ($order->lineItems as $line) or some such thing here -->\n                                <tr *ngFor=\"let product of aProduct\">\n                                    <td>{{product.name}}</td>\n                                    <td class=\"text-center\">{{product.quantity}}</td>\n                                    <td class=\"text-center\">{{product.price}}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from '../product.service';\n\nimport { Product } from '../product';\nimport { ActivatedRoute } from '@angular/router'\n\n@Component({\n  selector: 'app-show-product',\n  templateUrl: './show-product.component.html',\n  styleUrls: ['./show-product.component.css']\n})\nexport class ShowProductComponent implements OnInit {\n\n  product: Product\n\n  aProduct:Product[]\n\n\n  constructor(private productService: ProductService, private route: ActivatedRoute) { }\n\n  name = this.route.snapshot.paramMap.get(\"name\")\n\n\n  getProduct(id:string): void{\n    this.productService.getProduct(id).subscribe((product) => {\n      this.product = product;\n    })\n\n    console.log(this.name)\n  }\n\n  catchProduct(): void{\n    this.productService.catchProduct().subscribe(product=>{\n      this.aProduct=product\n    })\n  }\n\n  ngOnInit() {\n    if(this.name==\"1\"){\n      this.catchProduct()\n    }else{\n      this.getProduct(this.name)\n    }\n  }\n\n}\n","\n<div *ngIf=\"transaction.id\" class=\"p container \" dir=\"auto\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"panel panel-default\">\n                <div class=\"f panel-heading\">\n                    <div>\n                        <label for=\"id\">Transaction number : </label>\n                        <strong id=\"id\">{{transaction.id}}</strong>\n                    </div>\n                    <div >\n                            <label for=\"clientPhone\">Client Phone : </label>\n                            <strong id=\"clientPhone\">{{transaction.clientPhone}}</strong>\n                        </div>\n                </div>\n                <div class=\"panel-body\">\n                    <div class=\"table-responsive\">\n                        <table class=\"table table-condensed\" >\n                            <thead>\n                                <tr>\n                                    <td><strong i18n>Item</strong></td>\n                                    <td class=\"text-center\"><strong i18n>Quantity</strong></td>\n                                    <td class=\"text-center\"><strong i18n>Price</strong></td>\n                                    <td class=\"text-right\"><strong i18n>Totals</strong></td>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let product of transaction.product\">\n                                    <td>{{product.name}}</td>\n                                    <td class=\"text-center\">{{product.quantity}}</td>\n                                    <td class=\"text-center\">{{product.s_price | number}}</td>\n                                    <td class=\"text-right\">{{product.totals | number}}</td>\n                                </tr>\n                                <tr>\n                                    <td class=\"thick-line\"></td>\n                                    <td class=\"thick-line\"></td>\n                                    <td class=\"thick-line text-center\"><strong>Total</strong></td>\n                                    <td class=\"thick-line text-right\">{{transaction.total | number}}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"!transaction.id\" class=\"p container\" dir=\"auto\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"panel panel-default\">\n                <div class=\"text-right panel-heading\" i18n=\"@@12\">\n                    Only these quantities exist from the following products :\n                </div>\n                <div class=\"panel-body\">\n                    <div  class=\"table-responsive\">\n                        <table class=\"table table-condensed\" >\n                            <thead>\n                                <tr>\n                                    <td><strong i18n>Item</strong></td>\n                                    <td class=\"text-center\"><strong i18n>Quantity</strong></td>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let product of transaction.product\">\n                                    <td>{{product.name}}</td>\n                                    <td class=\"text-center\">{{product.quantity}}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router'\nimport { TransactionService } from '../transaction.service';\nimport { Transaction } from '../transaction';\n\n\n@Component({\n  selector: 'app-show-transaction',\n  templateUrl: './show-transaction.component.html',\n  styleUrls: ['./show-transaction.component.css']\n})\nexport class ShowTransactionComponent implements OnInit {\n\n  transaction\n\n  constructor(private route: ActivatedRoute, private transactionService: TransactionService) { }\n  \n\n  // getTransaction(id:string): void{\n  //   this.transactionService.getTransaction(id).subscribe((transaction) => {\n  //     this.transaction = transaction;\n  //   })\n  // }\n\n  delete(){\n    this.transactionService.deleteTransaction(this.transaction.id).subscribe()\n  }\n\n  catchTransaction(){\n    this.transactionService.catchTransaction().subscribe(transaction=>{\n      this.transaction=transaction\n    })\n  }\n  \n  ngOnInit() {\n    this.catchTransaction()\n  }\n\n}","\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Transaction } from './transaction'\n\nimport { catchError, map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransactionService {\n\n  constructor(private http: HttpClient) { }\n\n  getTransactions(): Observable<Transaction[]>{\n    return this.http.get<Transaction[]>(this.url)\n  }\n\n  getTransaction(_id: string): Observable<Transaction>{\n    return this.http.get<Transaction>(this.url+_id).pipe(\n      catchError(this.handleError<Transaction>(''))\n    )\n  }\n\n  deleteTransaction(_id: string): Observable<Transaction>{\n    return this.http.delete<Transaction>(this.url+_id)\n  }\n\n  addTransaction(transaction: Transaction): Observable<Transaction>{\n    return this.http.post<Transaction>(this.url, transaction)\n  }\n\n  putTransaction(_id:string, transaction: Transaction): Observable<Transaction>{\n    return this.http.put<Transaction>(this.url+_id, transaction)\n  }\n\n  Otransaction:Observable<Transaction>\n\n  throwTransaction(transaction:Transaction): void{\n    this.Otransaction = Observable.create((observer)=>{\n      observer.next(transaction)\n      observer.complete()\n    })\n  }\n\n  catchTransaction(): Observable<Transaction>{\n    return this.Otransaction;\n  }\n\n\n  url = \"http://localhost:3000/api/transactions/\";\n\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n   \n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n   \n      // TODO: better job of transforming error for user consumption\n      console.log(`${operation} failed: ${error.message}`);\n   \n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}","import { Product } from './product'\nexport class Transaction {\n    id?:string\n    clientPhone:string\n    product: Product[]\n    total?:number\n\n    totals() {\n        var sum=0;\n        for(let i=0;i<this.product.length;i++){\n            sum = sum + this.product[i].total()\n        }\n        return sum;\n    }\n}\n","\n  <div dir=\"auto\" class=\"row\">\n      <div class=\"col-6\">\n          <a class=\"btn btn-default btn-block btn-primary\" routerLink=\"/find/transaction\" i18n>Find</a>\n          </div>\n          <div class=\"col-6\" >\n          <a class=\"btn btn-default btn-block btn-primary\" routerLink=\"/add/transaction\" i18n>Add</a>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { TransactionService } from '../transaction.service';\n\n@Component({\n  selector: 'app-transaction',\n  templateUrl: './transaction.component.html',\n  styleUrls: ['./transaction.component.css']\n})\nexport class TransactionComponent implements OnInit {\n\n  transactions\n\n  constructor(private transactionService: TransactionService) { }\n\n  getTransaction(): void{\n    this.transactionService.getTransactions().subscribe(transactions => this.transactions=transactions)\n  }\n\n  ngOnInit() {\n    this.getTransaction()\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}