{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-transaction/add-transaction.component.css","webpack:///./src/app/add-transaction/add-transaction.component.html","webpack:///./src/app/add-transaction/add-transaction.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/find-transaction/find-transaction.component.css","webpack:///./src/app/find-transaction/find-transaction.component.html","webpack:///./src/app/find-transaction/find-transaction.component.ts","webpack:///./src/app/lq-product.service.ts","webpack:///./src/app/lqproduct/lqproduct.component.css","webpack:///./src/app/lqproduct/lqproduct.component.html","webpack:///./src/app/lqproduct/lqproduct.component.ts","webpack:///./src/app/safe.pipe.ts","webpack:///./src/app/show-transaction/show-transaction.component.css","webpack:///./src/app/show-transaction/show-transaction.component.html","webpack:///./src/app/show-transaction/show-transaction.component.ts","webpack:///./src/app/transaction.service.ts","webpack:///./src/app/transaction/transaction.component.css","webpack:///./src/app/transaction/transaction.component.html","webpack:///./src/app/transaction/transaction.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"  <div>\\n      <label for=\\\"clientPhone\\\">product:</label>\\n      <input type=\\\"text\\\" id=\\\"clientPhone\\\" [(ngModel)] = \\\"transaction.clientPhone\\\" >\\n  </div>\\n  <div *ngIf=\\\"names\\\">\\n      <div *ngFor=\\\"let name of names\\\">\\n          <label for=\\\"product\\\">product:</label>\\n          <input type=\\\"text\\\" id=\\\"product\\\" [(ngModel)] = \\\"transaction.product[name].name\\\" >\\n          <label for=\\\"quantity\\\">quantity:</label>\\n          <input type=\\\"number\\\" id=\\\"quantity\\\" [(ngModel)] = \\\"transaction.product[name].quantity\\\">\\n          <div>{{name}}{{ transaction.product[name].name}} </div>\\n      </div>\\n  </div>\\n\\n\\n<button (click)=\\\"showName()\\\">add</button>\\n<button (click)=\\\"deleteName()\\\">delete</button>\\n<button (click)=\\\"onSubmit()\\\">Submit</button>\\n\\n\\n\"","import { Component, OnInit, Renderer2 } from '@angular/core';\nimport { Transaction } from '../transaction'\nimport { TransactionService } from '../transaction.service';\n\n@Component({\n  selector: 'app-add-transaction',\n  templateUrl: './add-transaction.component.html',\n  styleUrls: ['./add-transaction.component.css']\n})\nexport class AddTransactionComponent implements OnInit {\n\n  transaction: Transaction = {\n    clientPhone:\"enter phone\",\n    product:[]\n  };\n  names:number[]=[]\n\n  constructor(private transactionService: TransactionService) { }\n\n  onSubmit(){\n    this.transactionService.addTransaction(this.transaction).subscribe()\n  }\n\n  i:number=0;\n\n  showName(){\n    this.transaction.product[this.i]={\n      name:\"enter name\",\n      quantity:0\n    }\n    this.names.push(this.i)\n    this.i = this.i+1\n  }\n\n  deleteName(){\n    this.transaction.product.pop()\n    this.names.pop();\n    this.i = this.i-1\n  }\n\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FindTransactionComponent } from './find-transaction/find-transaction.component';\nimport { ShowTransactionComponent } from './show-transaction/show-transaction.component';\n\n\nconst routes: Routes = [\n{path: 'find/transaction', component: FindTransactionComponent},\n{path: 'transaction/:id', component: ShowTransactionComponent}\n\n];\n\n@NgModule({\n  exports: [\n    RouterModule\n  ],\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Navbar</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a routerLink=\\\"/find/transaction\\\">Home</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'shopNg';\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { TransactionComponent } from './transaction/transaction.component';\nimport { LQProductComponent } from './lqproduct/lqproduct.component';\n\nimport { ShowTransactionComponent } from './show-transaction/show-transaction.component';\nimport { FindTransactionComponent } from './find-transaction/find-transaction.component';\n\nimport { AppRoutingModule } from './/app-routing.module';\nimport {FormsModule} from '@angular/forms';\nimport { AddTransactionComponent } from './add-transaction/add-transaction.component';\nimport { SafePipe } from './safe.pipe'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TransactionComponent,\n    LQProductComponent,\n    ShowTransactionComponent,\n    FindTransactionComponent,\n    AddTransactionComponent,\n    SafePipe\n  ],\n  exports:[\n    SafePipe\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [SafePipe],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div>\\n    <input type=\\\"text\\\" [(ngModel)] = \\\"id\\\">\\n    <input type=\\\"submit\\\" (click)=\\\"onSubmit()\\\">\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {Router } from '@angular/router'\n\n@Component({\n  selector: 'app-find-transaction',\n  templateUrl: './find-transaction.component.html',\n  styleUrls: ['./find-transaction.component.css']\n})\nexport class FindTransactionComponent implements OnInit {\n\n  id\n\n  constructor(private router: Router) { }\n\n  onSubmit(){\n\n    this.router.navigateByUrl('transaction/'+this.id)\n\n  }\n\n\n  ngOnInit() {\n  }\n\n}","\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { HttpClient } from '@angular/common/http';\nimport { LqProduct } from './lqProduct'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LqProductService {\n\n  constructor(private http: HttpClient) { }\n\n  getLqProducts(): Observable<LqProduct[]>{\n    return this.http.get<LqProduct[]>(this.url)\n  }\n\n  getLqProduct(_id: string): Observable<LqProduct>{\n    return this.http.get<LqProduct>(this.url+\"/\"+_id)\n  }\n\n  deleteLqProduct(_id: string): Observable<LqProduct>{\n    return this.http.delete<LqProduct>(this.url+\"/\"+_id)\n  }\n\n  addLqProduct(lqProduct: LqProduct): Observable<LqProduct>{\n    return this.http.post<LqProduct>(this.url, lqProduct)\n  }\n\n  putLqProduct(_id:string, lqProduct: LqProduct): Observable<LqProduct>{\n    return this.http.put<LqProduct>(this.url+\"/\"+_id, lqProduct)\n  }\n\n\n  url = \"http://localhost:3000/api/lq_products/\";\n}\n","module.exports = \"\"","module.exports = \"<ul>\\n  <li *ngFor=\\\"let lqProduct of lqProducts\\\">{{lqProduct.name}}  {{lqProduct.quantity}}</li>\\n</ul>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LqProductService } from '../lq-product.service'\n\n\n@Component({\n  selector: 'app-lqproduct',\n  templateUrl: './lqproduct.component.html',\n  styleUrls: ['./lqproduct.component.css']\n})\nexport class LQProductComponent implements OnInit {\n\n  lqProducts\n\n  constructor(private lqProductService: LqProductService) { }\n  \n  getProducts(): void{\n    this.lqProductService.getLqProducts().subscribe(lqProducts => this.lqProducts = lqProducts)\n  }\n\n  ngOnInit() {\n    this.getProducts()\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml} from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n\n  constructor(protected sanitizer: DomSanitizer) {}\n\n  transform(value: any): SafeHtml {\n    return this.sanitizer.bypassSecurityTrustHtml(value);\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"transaction\\\">\\n\\n        <div class=\\\"container\\\">\\n                <table class=\\\"table table-dark table-hover table-striped\\\">\\n                  <thead class=\\\"thead-light\\\">\\n                    <tr>\\n                      <th>product</th>\\n                      <th>Qty</th>        \\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let product of transaction.product\\\">\\n                        <td>{{product.name}}</td>\\n                        <td>{{product.quantity}} </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n              </div>\\n\\n              <button class=\\\"btn-alert\\\" (click)=\\\"delete()\\\">Delete</button>\\n              \\n        \\n</div>\\n<div>\\n\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router'\nimport { TransactionService } from '../transaction.service';\n\n\n@Component({\n  selector: 'app-show-transaction',\n  templateUrl: './show-transaction.component.html',\n  styleUrls: ['./show-transaction.component.css']\n})\nexport class ShowTransactionComponent implements OnInit {\n\n  transaction\n\n\n  constructor(private route: ActivatedRoute, private transactionService: TransactionService) { }\n\n  id = this.route.snapshot.paramMap.get(\"id\")\n  \n\n  getTransaction(id:string): void{\n    this.transactionService.getTransaction(id).subscribe((transaction) => {\n      this.transaction = transaction;\n    })\n  }\n\n  delete(){\n    this.transactionService.deleteTransaction(this.transaction.id).subscribe()\n  }\n\n  ngOnInit() {\n    this.getTransaction(this.id)\n  }\n\n}","\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Transaction } from './transaction'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransactionService {\n\n  constructor(private http: HttpClient) { }\n\n  getTransactions(): Observable<Transaction[]>{\n    return this.http.get<Transaction[]>(this.url)\n  }\n\n  getTransaction(_id: string): Observable<Transaction>{\n    return this.http.get<Transaction>(this.url+_id)\n  }\n\n  deleteTransaction(_id: string): Observable<Transaction>{\n    console.log(\"Delete\")\n    return this.http.delete<Transaction>(this.url+_id)\n  }\n\n  addTransaction(transaction: Transaction): Observable<Transaction>{\n    return this.http.post<Transaction>(this.url, transaction)\n  }\n\n  putTransaction(_id:string, transaction: Transaction): Observable<Transaction>{\n    return this.http.put<Transaction>(this.url+_id, transaction)\n  }\n\n\n  url = \"http://localhost:3000/api/transactions/\";\n}\n\n","module.exports = \"\"","module.exports = \"<ul>\\n  <li *ngFor=\\\"let transaction of transactions\\\">{{transaction.id}}\\n\\n    <ul>\\n      <li *ngFor=\\\"let product of transaction.product\\\">{{product.name}} <span class=\\\"bold\\\">{{product.quantity}}</span></li>\\n    </ul>\\n    \\n  </li>\\n</ul>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { TransactionService } from '../transaction.service';\n\n@Component({\n  selector: 'app-transaction',\n  templateUrl: './transaction.component.html',\n  styleUrls: ['./transaction.component.css']\n})\nexport class TransactionComponent implements OnInit {\n\n  transactions\n\n  constructor(private transactionService: TransactionService) { }\n\n  getTransaction(): void{\n    this.transactionService.getTransactions().subscribe(transactions => this.transactions=transactions)\n  }\n\n  ngOnInit() {\n    this.getTransaction()\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}